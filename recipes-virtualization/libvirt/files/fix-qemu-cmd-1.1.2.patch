Upstream-Status: Pending

-we now always run qemu-system-ppc64 and thus need toenable MULTIBUS capability
-special case handling for the way qemu serial portis handled now needs to be extended to ppc64
-in virQEMUCapsGet force chardev to be NULL becausewe don't support chardev for console
-remove change the modified the way network devicearguments are handled
-- we should use -device/-netdev

Signed-off-by: Stuart Yoder <stuart.yoder@freescale.com>
Signed-off-by: Olivia Yin <hong-hua.yin@freescale.com>

diff --git a/src/qemu/qemu_capabilities.c b/src/qemu/qemu_capabilities.c
index 7888e2d..80cb112 100644
--- a/src/qemu/qemu_capabilities.c
+++ b/src/qemu/qemu_capabilities.c
@@ -2344,6 +2344,9 @@ virQEMUCapsInitHelp(virQEMUCapsPtr qemuCaps, uid_t runUid, gid_t runGid)
         virQEMUCapsClear(qemuCaps, QEMU_CAPS_NO_ACPI);
     }
 
+    if (qemuCaps->arch == VIR_ARCH_PPC || qemuCaps->arch == VIR_ARCH_PPC64)
+        virQEMUCapsSet(qemuCaps, QEMU_CAPS_PCI_MULTIBUS);
+
     /* virQEMUCapsExtractDeviceStr will only set additional caps if qemu
      * understands the 0.13.0+ notion of "-device driver,".  */
     if (virQEMUCapsGet(qemuCaps, QEMU_CAPS_DEVICE) &&
@@ -2471,6 +2474,9 @@ virQEMUCapsInitArchQMPBasic(virQEMUCapsPtr qemuCaps,
         virQEMUCapsSet(qemuCaps, QEMU_CAPS_NO_KVM_PIT);
     }
 
+    if (qemuCaps->arch == VIR_ARCH_PPC || qemuCaps->arch == VIR_ARCH_PPC64)
+        virQEMUCapsSet(qemuCaps, QEMU_CAPS_PCI_MULTIBUS);
+
     ret = 0;
 
 cleanup:
diff --git a/src/qemu/qemu_command.c b/src/qemu/qemu_command.c
index f8fccea..040498a 100644
--- a/src/qemu/qemu_command.c
+++ b/src/qemu/qemu_command.c
@@ -8488,7 +8488,9 @@ qemuBuildCommandLine(virConnectPtr conn,
 
             /* Use -chardev with -device if they are available */
             if (virQEMUCapsGet(qemuCaps, QEMU_CAPS_CHARDEV) &&
-                virQEMUCapsGet(qemuCaps, QEMU_CAPS_DEVICE)) {
+                virQEMUCapsGet(qemuCaps, QEMU_CAPS_DEVICE) &&
+                def->os.arch != VIR_ARCH_PPC64 &&
+                def->os.arch != VIR_ARCH_PPC) {
                 virCommandAddArg(cmd, "-chardev");
                 if (!(devstr = qemuBuildChrChardevStr(&serial->source,
                                                       serial->info.alias,
diff --git a/src/qemu/qemu_process.c b/src/qemu/qemu_process.c
index dfe8142..7f86e6c 100644
--- a/src/qemu/qemu_process.c
+++ b/src/qemu/qemu_process.c
@@ -1656,6 +1656,12 @@ qemuProcessFindCharDevicePTYsMonitor(virDomainObjPtr vm,
     bool chardevfmt = virQEMUCapsGet(qemuCaps, QEMU_CAPS_CHARDEV);
     size_t i = 0;
 
+    /* right now on PPC QEMU_CAPS_CHARDEV is a problem...it is
+     * needed for the monitor, but not supported for the serial
+     * console, so clear the value
+     */
+    chardevfmt = 0;  // we don't support chardev for console
+
     if (qemuProcessLookupPTYs(vm->def->serials, vm->def->nserials,
                               paths, chardevfmt) < 0)
         return -1;
