From 4846a08eaebc2c21a933d01026d31e535a088cf6 Mon Sep 17 00:00:00 2001
From: Paul Barrette <paul.barrette@freescale.com>
Date: Tue, 8 Feb 2011 17:09:36 -0500
Subject: [PATCH] fsl_ipt_l7pm Changes for kernel 2.6.35.

---
 Makefile   |   15 ++++++++++++---
 ipt_l7pm.c |   19 ++++++++++++++-----
 2 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/Makefile b/Makefile
index 651fec6..20c9d85 100644
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,16 @@
-obj-m := ipt_l7pm.o
+#***********************< BEGIN COPYRIGHT >************************
+#
+# Copyright (C) 2007-2011 Freescale Semiconductor, Inc. All rights reserved.
+#
+# This is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+#***********************< END COPYRIGHT >***************************/
 
-KERNEL_SRC       := /local/paul/8572_nov_rel/linux-2.6.30-fsl
-KERNEL_ARGS      := SUBDIRS=$(PWD) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE)
+obj-m       := ipt_l7pm.o
+KERNEL_ARGS := SUBDIRS=$(PWD) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE)
 
 .PHONY: build_modules clean
 default: build_modules
diff --git a/ipt_l7pm.c b/ipt_l7pm.c
index 976790e..672d75b 100644
--- a/ipt_l7pm.c
+++ b/ipt_l7pm.c
@@ -1,6 +1,6 @@
 /************************< BEGIN COPYRIGHT >************************
  *
- * Copyright (C) 2007-2009 Freescale Semiconductor, Inc. All rights reserved.
+ * Copyright (C) 2007-2011 Freescale Semiconductor, Inc. All rights reserved.
  *
  * This is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -174,6 +174,7 @@ TOTAL_PACKETS(struct nf_conn *ct)
 			       acct[IP_CT_DIR_REPLY].packets);
 }
 
+/* returns 1 for IP */
 static int can_handle(const struct sk_buff *skb)
 {
   if (!SKB_NH_IPH(skb))		/* not IP */
@@ -449,7 +450,9 @@ out:
  * Returns true on match and false otherwise.
  */
 static bool
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 28)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 35)
+match(const struct sk_buff *skbin, struct xt_action_param *par)
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 28)
 match(const struct sk_buff *skbin, const struct xt_match_param *par)
 #else
 match(struct sk_buff *skbin,
@@ -727,15 +730,21 @@ out:
   return info->invert;
 }
 
-static bool checkentry(const struct xt_mtchk_param *par)
+/* Note: as of 2.6.35, the ret code has changed */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 35)
+static int
+#else
+static bool
+#endif
+checkentry(const struct xt_mtchk_param *par)
 {
   DPRINTK("ipt_l7pm: checkentry\n");
   if (nf_ct_l3proto_try_module_get(par->match->family) < 0) {
 	printk(KERN_WARNING "can't load conntrack support for "
 	"proto=%d\n", par->match->family);
-	return 0;
+	return -EINVAL;
   }
-  return 1;
+  return 0;
 }
 
 
-- 
1.7.4

